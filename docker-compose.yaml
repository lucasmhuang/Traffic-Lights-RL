version: "3.9"

services:
  # kafka-ui:
  #   image: provectuslabs/kafka-ui
  #   container_name: kafka-ui
  #   ports:
  #     - "8080:8080"
  #   restart: always
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=local
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  #     - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9091
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
      
  # producer:
  #   build:
  #     context: .
  #     dockerfile: app/producer/Dockerfile
  #   depends_on:
  #     - kafka
  #   environment:
  #     SCRIPT: app/producer/producer.py
  #     DATA: data/users.csv
  #     KAFKA_HOST: kafka:9092
  #     KAFKA_TOPIC: sumo-traffic-data

  consumer_flink:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    ports:
      - "8081:8081"
    restart: always
    environment:
      SCRIPT: consumer/consumer.py
      KAFKA_HOST: kafka:9092
      ZOOKEEPER_HOST: zookeeper:2181
      KAFKA_TOPIC: sumo-traffic-data
      KAFKA_CONSUMER_GROUP: Flink-Group